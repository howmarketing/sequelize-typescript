import { Sequelize, DataTypes } from "sequelize";
import { databaseConfig } from "@config/database";
import TesteModelProps from "@models/autoGenerated/Teste";
import AddressModelProps from "@models/autoGenerated/Address";
import CategoryModelProps from "@models/autoGenerated/Category";
import ProductModelProps from "@models/autoGenerated/Product";
import ProjectModelProps from "@models/autoGenerated/Project";
import SaleOrderModelProps from "@models/autoGenerated/SaleOrder";
import SaleOrderAditionalInfoModelProps from "@models/autoGenerated/SaleOrderAditionalInfo";
import SaleOrderItemModelProps from "@models/autoGenerated/SaleOrderItem";
import TechModelProps from "@models/autoGenerated/Tech";
import UserPhoneNumbersModelProps from "@models/autoGenerated/UserPhoneNumbers";
import UserModelProps from "@models/autoGenerated/User";

// Conecta com o banco de dados caso ainda não tenha a conexão global
const connect = (() => {
  try {
    const sequelizeConn = new Sequelize(
      databaseConfig.database,
      databaseConfig.username,
      databaseConfig.password,
      databaseConfig
    );
    return {
      success: true,
      connection: sequelizeConn,
      define: () => {
        // console.log("Successfully connected with sequelize:", connection);
      },
    };
  } catch (e: any) {
    return {
      success: false,
      connection: undefined,
      define: () => {
        console.log("ERR: " + e.message, e);
      },
    };
  }
})();

global.sequelizeConnection = connect.connection;
TesteModelProps.initModel(connect.connection, DataTypes);
AddressModelProps.initModel(connect.connection,DataTypes);
CategoryModelProps.initModel(connect.connection,DataTypes);
ProductModelProps.initModel(connect.connection,DataTypes);
ProjectModelProps.initModel(connect.connection,DataTypes);
SaleOrderModelProps.initModel(connect.connection,DataTypes);
SaleOrderAditionalInfoModelProps.initModel(connect.connection,DataTypes);
SaleOrderItemModelProps.initModel(connect.connection,DataTypes);
TechModelProps.initModel(connect.connection,DataTypes);
UserPhoneNumbersModelProps.initModel(connect.connection,DataTypes);
UserModelProps.initModel(connect.connection,DataTypes);

AddressModelProps.getModelClass().associate(connect.connection.models);
CategoryModelProps.getModelClass().associate(connect.connection.models);
ProductModelProps.getModelClass().associate(connect.connection.models);
ProjectModelProps.getModelClass().associate(connect.connection.models);
SaleOrderModelProps.getModelClass().associate(connect.connection.models);
SaleOrderAditionalInfoModelProps.getModelClass().associate(connect.connection.models);
SaleOrderItemModelProps.getModelClass().associate(connect.connection.models);
TechModelProps.getModelClass().associate(connect.connection.models);
UserPhoneNumbersModelProps.getModelClass().associate(connect.connection.models);
UserModelProps.getModelClass().associate(connect.connection.models);

export default connect.connection;

// const defineModelsAsync = async () => {
// 	if (connect.success === false) {
// 	  console.log("ERRRRRRRR", connect);
// 	  return {success:false,msg:"Connection faild!", connection:connect.connection};
// 	}
//     try {
//       //Passar a chamada da database p o arquivo routes
//       await sequelizeConnection.authenticate();
      
//       const TesteClass = TesteModelProps.getModelClass();
//       await TesteClass.sync();
//       const createdRecord = await TesteClass.create({first_name:"Gabriel", last_name:"Ariza", email:"gabs@gmail.com"});
//       console.log("createdRecord: ",createdRecord);
//       const Records = await TesteClass.findAll();
//       console.log("Records: ",Records);
//       return {success:true,msg:"Connected!", connection:connect.connection};
//     } catch (e: any) {
//       console.log("defineModelsAsync(ERROR): ",e);
// 	  return {success:false,msg:"Connection faild! "+e.message, connection:connect.connection};
//     }
// };
// export default {
//   defineModelsAsync
// };
// console.log(connection);
// User.init(connection);
// UsersPhoneNumbers.init(connection);
// Tech.init(connection);
// UsersPhoneNumbers.associate(connection.models);
// User.associate(connection.models);
// Tech.associate(connection.models);
